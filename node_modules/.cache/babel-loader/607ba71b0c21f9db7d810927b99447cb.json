{"ast":null,"code":"var _jsxFileName = \"/home/vonmeme/Escritorio/evaluciacion-final/modulo-3-evaluacion-final-memematvaz/src/components/App.js\";\nimport React from 'react';\nimport '../styles/App.scss';\nimport fetchCharacters from './services/FetchData.js';\nimport CharacterList from './CharacterList';\nimport CharacterDetails from './CharacterDetails';\nimport FilterInput from './FilterInput';\nimport { Route, Switch } from 'react-router-dom';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleInputValue = this.handleInputValue.bind(this);\n    this.state = {\n      data: [],\n      value: ''\n    };\n  }\n\n  componentDidMount() {\n    fetchCharacters().then(data => {\n      this.setState({\n        data: data.results\n      });\n    });\n  }\n\n  handleInputValue(inputValue) {\n    this.setState({\n      value: inputValue\n    });\n  }\n\n  renderCharacterDetail(props) {\n    console.log(props); //esto me lo pasa router son datos que nos llegan de la url\n\n    const routeId = props.match.params.id;\n    const characters = this.state.data; //recorro mi estado si el id del objeto coincide con el id que me llega de la url retorno el componente CharacterDetails con la info\n    //correspondiente, darse cuenta que lo que mando es el objeto entero a través de props\n\n    for (let character of characters) {\n      if (character.id === routeId) {\n        return /*#__PURE__*/React.createElement(DrinkDetails, {\n          characterObject: character,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 18\n          }\n        });\n      }\n    }\n  }\n\n  render() {\n    console.log(this.state.data);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(FilterInput, {\n      handleInputValue: this.handleInputValue,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 12\n      }\n    }), /*#__PURE__*/React.createElement(CharacterList, {\n      data: this.state.data,\n      inputValue: this.state.value,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 12\n      }\n    })), /*#__PURE__*/React.createElement(Route, {\n      path: \"/character:id\",\n      render: this.renderCharacterDetail,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 10\n      }\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/vonmeme/Escritorio/evaluciacion-final/modulo-3-evaluacion-final-memematvaz/src/components/App.js"],"names":["React","fetchCharacters","CharacterList","CharacterDetails","FilterInput","Route","Switch","App","Component","constructor","props","handleInputValue","bind","state","data","value","componentDidMount","then","setState","results","inputValue","renderCharacterDetail","console","log","routeId","match","params","id","characters","character","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,oBAAP;AACA,OAAOC,eAAP,MAA4B,yBAA5B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,kBAA9B;;AAEA,MAAMC,GAAN,SAAkBP,KAAK,CAACQ,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBC,IAAtB,CAA2B,IAA3B,CAAxB;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE,EADK;AAEXC,MAAAA,KAAK,EAAC;AAFK,KAAb;AAID;;AAGDC,EAAAA,iBAAiB,GAAE;AACjBf,IAAAA,eAAe,GACZgB,IADH,CACQH,IAAI,IAAI;AACZ,WAAKI,QAAL,CAAe;AACbJ,QAAAA,IAAI,EAACA,IAAI,CAACK;AADG,OAAf;AAGD,KALH;AAMC;;AAEDR,EAAAA,gBAAgB,CAACS,UAAD,EAAY;AAC1B,SAAKF,QAAL,CAAc;AACZH,MAAAA,KAAK,EAAEK;AADK,KAAd;AAGD;;AAEDC,EAAAA,qBAAqB,CAACX,KAAD,EAAO;AAC1BY,IAAAA,OAAO,CAACC,GAAR,CAAYb,KAAZ,EAD0B,CAE1B;;AACA,UAAMc,OAAO,GAAGd,KAAK,CAACe,KAAN,CAAYC,MAAZ,CAAmBC,EAAnC;AACA,UAAMC,UAAU,GAAG,KAAKf,KAAL,CAAWC,IAA9B,CAJ0B,CAK1B;AACA;;AACA,SAAK,IAAIe,SAAT,IAAsBD,UAAtB,EAAiC;AAC/B,UAAGC,SAAS,CAACF,EAAV,KAAiBH,OAApB,EAA4B;AAC1B,4BAAO,oBAAC,YAAD;AAAc,UAAA,eAAe,EAAEK,SAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;AACF;AACF;;AAIHC,EAAAA,MAAM,GAAE;AACNR,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKV,KAAL,CAAWC,IAAvB;AACA,wBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,GAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,WAAD;AAAa,MAAA,gBAAgB,EAAE,KAAKH,gBAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE,oBAAC,aAAD;AAAe,MAAA,IAAI,EAAE,KAAKE,KAAL,CAAWC,IAAhC;AACe,MAAA,UAAU,EAAE,KAAKD,KAAL,CAAWE,KADtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,eAME,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,eAAZ;AAA4B,MAAA,MAAM,EAAE,KAAKM,qBAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,CADF,CADD;AAYD;;AAxD+B;;AA2DlC,eAAed,GAAf","sourcesContent":["import React from 'react';\nimport '../styles/App.scss';\nimport fetchCharacters from './services/FetchData.js';\nimport CharacterList from './CharacterList';\nimport CharacterDetails from './CharacterDetails';\nimport FilterInput from './FilterInput';\nimport { Route, Switch } from 'react-router-dom';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleInputValue = this.handleInputValue.bind(this);\n    this.state = {\n      data: [],\n      value:''\n        }\n  }\n\n\n  componentDidMount(){\n    fetchCharacters()\n      .then(data => {\n        this.setState ({\n          data:data.results\n        })\n      })\n    }\n  \n    handleInputValue(inputValue){\n      this.setState({\n        value: inputValue\n      })\n    }\n\n    renderCharacterDetail(props){\n      console.log(props)\n      //esto me lo pasa router son datos que nos llegan de la url\n      const routeId = props.match.params.id;\n      const characters = this.state.data;\n      //recorro mi estado si el id del objeto coincide con el id que me llega de la url retorno el componente CharacterDetails con la info\n      //correspondiente, darse cuenta que lo que mando es el objeto entero a través de props\n      for (let character of characters){\n        if(character.id === routeId){\n          return <DrinkDetails characterObject={character}/>\n        }\n      }\n    }\n\n\n\n  render(){\n    console.log(this.state.data)\n    return (\n     <div>\n       <Switch>\n         <Route exact path=\"/\">\n           <FilterInput handleInputValue={this.handleInputValue}/>\n           <CharacterList data={this.state.data} \n                          inputValue={this.state.value}/>\n         </Route>\n         <Route path=\"/character:id\" render={this.renderCharacterDetail}/>\n      </Switch>\n     </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}