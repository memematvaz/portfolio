{"ast":null,"code":"var _jsxFileName = \"/home/vonmeme/Escritorio/proyectos code/Portfolio/portfolio/src/components/projects/code/CodeProjectsList.js\";\nimport React, { useState } from 'react';\nimport Header from '../../Header';\nimport FilterButtons from './FilterButtons';\nimport CodeProject from './CodeProject';\nimport CODEPROJECTS from '../../services/CodeProjectsJSON';\n\nconst CodeProjects = () => {\n  const [projects, setFilteredProjects] = useState(CODEPROJECTS);\n\n  const handleAllProjects = () => {\n    setReset();\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(FilterButtons, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 11\n    }\n  }), projects.filter(project => props.filter === null || project.type === props.filter).map(project => {\n    return /*#__PURE__*/React.createElement(CodeProject, {\n      id: project.id,\n      project: project,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 15\n      }\n    });\n  }));\n};\n\nexport default CodeProjects;","map":{"version":3,"sources":["/home/vonmeme/Escritorio/proyectos code/Portfolio/portfolio/src/components/projects/code/CodeProjectsList.js"],"names":["React","useState","Header","FilterButtons","CodeProject","CODEPROJECTS","CodeProjects","projects","setFilteredProjects","handleAllProjects","setReset","filter","project","props","type","map","id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,YAAP,MAAyB,iCAAzB;;AAGA,MAAMC,YAAY,GAAG,MAAM;AAC1B,QAAM,CAACC,QAAD,EAAWC,mBAAX,IAAkCP,QAAQ,CAACI,YAAD,CAAhD;;AAEC,QAAMI,iBAAiB,GAAG,MAAM;AAC5BC,IAAAA,QAAQ;AACX,GAFD;;AAKE,sBACI,uDACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAIEH,QAAQ,CACPI,MADD,CACQC,OAAO,IAAIC,KAAK,CAACF,MAAN,KAAiB,IAAjB,IAAyBC,OAAO,CAACE,IAAR,KAAiBD,KAAK,CAACF,MADnE,EAECI,GAFD,CAEKH,OAAO,IAAE;AACV,wBACA,oBAAC,WAAD;AAAgB,MAAA,EAAE,EAAEA,OAAO,CAACI,EAA5B;AACgB,MAAA,OAAO,EAAEJ,OADzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA;AAKD,GARH,CAJF,CADJ;AAkBH,CA1BD;;AA2BG,eAAeN,YAAf","sourcesContent":["import React, { useState } from 'react';\nimport Header from '../../Header';\nimport FilterButtons from './FilterButtons';\nimport CodeProject from './CodeProject'\nimport CODEPROJECTS from '../../services/CodeProjectsJSON';\n\n\nconst CodeProjects = () => {\n const [projects, setFilteredProjects] = useState(CODEPROJECTS);\n\n  const handleAllProjects = () => {\n      setReset()\n  }\n\n\n    return (\n        <>\n          <Header/>\n          <FilterButtons/>\n          {   \n          projects\n          .filter(project => props.filter === null || project.type === props.filter)\n          .map(project=>{\n              return(\n              <CodeProject    id={project.id}\n                              project={project}\n              />\n              )\n            })\n        }\n        </>\n    )\n    \n}\n   export default CodeProjects;"]},"metadata":{},"sourceType":"module"}