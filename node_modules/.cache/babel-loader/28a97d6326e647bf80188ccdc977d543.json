{"ast":null,"code":"var _jsxFileName = \"/home/vonmeme/Escritorio/evaluciacion-final/modulo-3-evaluacion-final-memematvaz/src/components/CharacterList.js\";\nimport React from 'react';\nimport Character from './Character.js';\nimport { Link } from 'react-router-dom';\n\nconst CharacterList = props => {\n  const isExistingCharacter = props.charactersData.length === 0 ? /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"alert\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 69\n    }\n  }, \"\\xA1Loco! \", /*#__PURE__*/React.createElement(Emoji, {\n    text: \":satisfied:\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 98\n    }\n  }), \"El personaje que buscas no \\xE9xiste en este universo. \\xA1Vuelve a probar!\") : '';\n  console.log('busqueda' + props.data.length);\n\n  if (props.data.length === 0) {\n    return /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 16\n      }\n    }, `There is no character named ${props.inputValue}`);\n  } else {\n    return /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }\n    }, props.data.filter(characterObject => props.inputValue === '' || characterObject.name.toLowerCase().includes(props.inputValue.toLowerCase())).map(characterObject => /*#__PURE__*/React.createElement(\"li\", {\n      key: characterObject.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: `/character/${characterObject.id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Character, {\n      image: characterObject.image,\n      name: characterObject.name,\n      specie: characterObject.species,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 29\n      }\n    })))));\n  }\n};\n\nexport default CharacterList;\n/*if(props.data.length !== props.inputValue){\n        return (`There is no character named ${props.inputValue}`)\n    }else{\n     return(\n        <ul>\n        {props.data\n            .filter(characterObject => props.inputValue === '' || characterObject.name.toLowerCase().includes(props.inputValue.toLowerCase()))\n            .map(characterObject =>\n\n            <li key={characterObject.id}>\n                <Link to={`/character/${characterObject.id}`}>\n                    <Character image={characterObject.image}\n                               name={characterObject.name}\n                               specie={characterObject.species}\n                    />\n                </Link>\n            </li>\n            )}\n        </ul>\n    )\n}\n*/\n\n/*const CharacterList = (props) => {\n    console.log(props.inputValue)\n    if(characterObject => props.data.includes(characterObject.name)) {\n        \n        return ( \n                <ul>\n                {props.data\n                    .filter(characterObject => props.inputValue === '' || characterObject.name.toLowerCase().includes(props.inputValue.toLowerCase()))\n                    .map(characterObject =>\n        \n                    <li key={characterObject.id}>\n                        <Link to={`/character/${characterObject.id}`}>\n                            <Character image={characterObject.image}\n                                       name={characterObject.name}\n                                       specie={characterObject.species}\n                            />\n                        </Link>\n                    </li>\n                    )}\n                </ul>\n            )\n        }\n    else{\n     return( `There is no character named ${props.inputValue}`)\n       \n    \n}\n\n}*/","map":{"version":3,"sources":["/home/vonmeme/Escritorio/evaluciacion-final/modulo-3-evaluacion-final-memematvaz/src/components/CharacterList.js"],"names":["React","Character","Link","CharacterList","props","isExistingCharacter","charactersData","length","console","log","data","inputValue","filter","characterObject","name","toLowerCase","includes","map","id","image","species"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,gBAAtB;AACA,SAASC,IAAT,QAAqB,kBAArB;;AAEA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAE7B,QAAMC,mBAAmB,GAAGD,KAAK,CAACE,cAAN,CAAqBC,MAArB,KAAgC,CAAhC,gBAAoC;AAAI,IAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAA6B,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,aAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA7B,gFAApC,GAA0K,EAAtM;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAaL,KAAK,CAACM,IAAN,CAAWH,MAApC;;AACA,MAAGH,KAAK,CAACM,IAAN,CAAWH,MAAX,KAAoB,CAAvB,EAA0B;AAEtB,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,+BAA8BH,KAAK,CAACO,UAAW,EAApD,CAAP;AAAkE,GAFtE,MAII;AACA,wBACQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACCP,KAAK,CAACM,IAAN,CACIE,MADJ,CACWC,eAAe,IAAIT,KAAK,CAACO,UAAN,KAAqB,EAArB,IAA2BE,eAAe,CAACC,IAAhB,CAAqBC,WAArB,GAAmCC,QAAnC,CAA4CZ,KAAK,CAACO,UAAN,CAAiBI,WAAjB,EAA5C,CADzD,EAEIE,GAFJ,CAEQJ,eAAe,iBAEpB;AAAI,MAAA,GAAG,EAAEA,eAAe,CAACK,EAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAG,cAAaL,eAAe,CAACK,EAAG,EAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAEL,eAAe,CAACM,KAAlC;AACW,MAAA,IAAI,EAAEN,eAAe,CAACC,IADjC;AAEW,MAAA,MAAM,EAAED,eAAe,CAACO,OAFnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,CAJH,CADD,CADR;AAkBH;AAEJ,CA9BD;;AA+BA,eAAejB,aAAf;AAEA;;;;;;;;;;;;;;;;;;;;;;;AAuBA","sourcesContent":["import React from 'react';\nimport Character from './Character.js';\nimport { Link } from 'react-router-dom';\n\nconst CharacterList = (props) => {\n\n    const isExistingCharacter = props.charactersData.length === 0 ? <h3 className=\"alert\">¡Loco! <Emoji text=\":satisfied:\" />El personaje que buscas no éxiste en este universo. ¡Vuelve a probar!</h3> : ''\n\n    console.log('busqueda' + props.data.length)\n    if(props.data.length===0) {\n        \n        return <p>{`There is no character named ${props.inputValue}`}</p>}\n\n    else{\n        return(\n                <ul>\n                {props.data\n                    .filter(characterObject => props.inputValue === '' || characterObject.name.toLowerCase().includes(props.inputValue.toLowerCase()))\n                    .map(characterObject =>\n        \n                    <li key={characterObject.id}>\n                        <Link to={`/character/${characterObject.id}`}>\n                            <Character image={characterObject.image}\n                                       name={characterObject.name}\n                                       specie={characterObject.species}\n                            />\n                        </Link>\n                    </li>\n                    )}\n                </ul>\n            \n        )\n    }\n    \n}\nexport default CharacterList;\n\n/*if(props.data.length !== props.inputValue){\n        return (`There is no character named ${props.inputValue}`)\n    }else{\n     return(\n        <ul>\n        {props.data\n            .filter(characterObject => props.inputValue === '' || characterObject.name.toLowerCase().includes(props.inputValue.toLowerCase()))\n            .map(characterObject =>\n\n            <li key={characterObject.id}>\n                <Link to={`/character/${characterObject.id}`}>\n                    <Character image={characterObject.image}\n                               name={characterObject.name}\n                               specie={characterObject.species}\n                    />\n                </Link>\n            </li>\n            )}\n        </ul>\n    )\n}\n*/\n\n/*const CharacterList = (props) => {\n    console.log(props.inputValue)\n    if(characterObject => props.data.includes(characterObject.name)) {\n        \n        return ( \n                <ul>\n                {props.data\n                    .filter(characterObject => props.inputValue === '' || characterObject.name.toLowerCase().includes(props.inputValue.toLowerCase()))\n                    .map(characterObject =>\n        \n                    <li key={characterObject.id}>\n                        <Link to={`/character/${characterObject.id}`}>\n                            <Character image={characterObject.image}\n                                       name={characterObject.name}\n                                       specie={characterObject.species}\n                            />\n                        </Link>\n                    </li>\n                    )}\n                </ul>\n            )\n        }\n    else{\n     return( `There is no character named ${props.inputValue}`)\n       \n    \n}\n\n}*/"]},"metadata":{},"sourceType":"module"}