{"ast":null,"code":"var _jsxFileName = \"/home/vonmeme/Escritorio/evaluciacion-final/modulo-3-evaluacion-final-memematvaz/src/components/App.js\";\nimport React from 'react';\nimport '../styles/App.scss';\nimport '../index.scss';\nimport fetchCharacters from './services/FetchData.js';\nimport Header from './Header';\nimport CharacterList from './CharacterList';\nimport CharacterDetails from './CharacterDetails';\nimport FilterInput from './FilterInput';\nimport FilterCheckbox from './FilterInput';\nimport { Route, Switch } from 'react-router-dom';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleInputValue = this.handleInputValue.bind(this);\n    this.renderCharacterDetails = this.renderCharacterDetails.bind(this);\n    this.handleCheckbox = this.handleCheckbox.bind(this);\n    this.state = {\n      data: [],\n      value: '',\n      isChecked: false\n    };\n  }\n\n  componentDidMount() {\n    const localValue = JSON.parse(localStorage.getItem('localValue'));\n\n    if (localValue !== null) {\n      this.setState({\n        value: localValue\n      });\n    }\n\n    fetchCharacters().then(data => {\n      this.setState({\n        data: data.results\n      });\n    });\n  }\n\n  componentDidUpdate() {\n    localStorage.setItem('localValue', JSON.stringify(this.state.value));\n  }\n\n  handleInputValue(inputValue) {\n    this.setState({\n      value: inputValue\n    });\n  }\n\n  handleCheckbox() {\n    this.setState(prevState => {\n      return {\n        isChecked: !prevState.isChecked\n      };\n    });\n  }\n\n  renderCharacterDetails(props) {\n    const routeId = props.match.params.id;\n    const characters = this.state.data;\n\n    for (let character of characters) {\n      if (character.id === parseInt(routeId)) {\n        return /*#__PURE__*/React.createElement(CharacterDetails, {\n          characterObject: character,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 16\n          }\n        });\n      }\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 12\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 14\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 16\n      }\n    }), /*#__PURE__*/React.createElement(FilterInput, {\n      handleInputValue: this.handleInputValue,\n      value: this.state.value,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 16\n      }\n    }), /*#__PURE__*/React.createElement(FilterCheckbox, {\n      handleCheckbox: this.handleCheckbox,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 16\n      }\n    }), /*#__PURE__*/React.createElement(CharacterList, {\n      data: this.state.data,\n      inputValue: this.state.value,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 16\n      }\n    })), /*#__PURE__*/React.createElement(Route, {\n      path: \"/character/:id\",\n      render: this.renderCharacterDetails,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 15\n      }\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/vonmeme/Escritorio/evaluciacion-final/modulo-3-evaluacion-final-memematvaz/src/components/App.js"],"names":["React","fetchCharacters","Header","CharacterList","CharacterDetails","FilterInput","FilterCheckbox","Route","Switch","App","Component","constructor","props","handleInputValue","bind","renderCharacterDetails","handleCheckbox","state","data","value","isChecked","componentDidMount","localValue","JSON","parse","localStorage","getItem","setState","then","results","componentDidUpdate","setItem","stringify","inputValue","prevState","routeId","match","params","id","characters","character","parseInt","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport '../styles/App.scss';\nimport '../index.scss';\nimport fetchCharacters from './services/FetchData.js';\nimport Header from './Header';\nimport CharacterList from './CharacterList';\nimport CharacterDetails from './CharacterDetails';\nimport FilterInput from './FilterInput';\nimport FilterCheckbox from './FilterInput';\nimport { Route, Switch } from 'react-router-dom';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleInputValue = this.handleInputValue.bind(this);\n    this.renderCharacterDetails = this.renderCharacterDetails.bind(this);\n    this.handleCheckbox = this.handleCheckbox.bind(this)\n    this.state = {\n      data: [],\n      value:'',\n      isChecked: false\n        }\n  }\n\n  componentDidMount(){\n    const localValue = JSON.parse(localStorage.getItem('localValue'));\n\n    if(localValue !== null){\n        this.setState({\n          value:localValue\n        })\n    }\n\n    fetchCharacters()\n      .then(data => {\n        this.setState ({\n          data:data.results\n        })\n    })\n  }\n\n  componentDidUpdate(){\n    localStorage.setItem('localValue', JSON.stringify(this.state.value));\n  }\n\n  handleInputValue(inputValue){\n    this.setState({\n      value: inputValue\n    })\n  }\n\n  handleCheckbox() {\n    this.setState(prevState => {\n      return {\n        isChecked: !prevState.isChecked\n      }\n    })\n  }\n\n  renderCharacterDetails(props){\n    const routeId = props.match.params.id;\n    const characters = this.state.data;\n    for(let character of characters) {\n      if(character.id === parseInt(routeId)) {\n        return <CharacterDetails characterObject={character}/>\n      }\n    }\n  }\n\n  render(){\n    return (\n     <div>\n           <Switch>\n             <Route exact path=\"/\">\n               <Header/>\n               <FilterInput handleInputValue={this.handleInputValue}\n                            value={this.state.value}\n                            />\n               <FilterCheckbox handleCheckbox={this.handleCheckbox}\n               />\n               <CharacterList data={this.state.data} \n                              inputValue={this.state.value}\n                              />\n              </Route>\n              <Route path=\"/character/:id\" render={this.renderCharacterDetails}/>\n            </Switch>\n    </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}