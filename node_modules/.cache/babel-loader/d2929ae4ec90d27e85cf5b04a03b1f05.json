{"ast":null,"code":"var _jsxFileName = \"/home/vonmeme/Escritorio/proyectos code/Portfolio/portfolio/src/components/projects/code/CodeProjectsList.js\";\nimport React from 'react';\nimport Header from '../../Header';\nimport FilterButtons from './FilterButtons';\nimport CodeProject from './CodeProject';\nimport CODEPROJECTS from '../../services/CodeProjectsJSON';\nimport { useState } from 'react';\n\nconst CodeProjects = props => {\n  const projects = CODEPROJECTS;\n  const [filterProjects, setFilterProjects] = useState(null);\n  console.log(projects);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(FilterButtons, {\n    setFilterProjects: this.state.setFilterProjects,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"codeproject--list-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }\n  }, projects.map(projectObject => /*#__PURE__*/React.createElement(\"li\", {\n    className: \"codeproject--object\",\n    key: projectObject.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(CodeProject, {\n    image: projectObject.image,\n    title: projectObject.title,\n    description: projectObject.details.description,\n    code: projectObject.details.links.code,\n    web: projectObject.details.links.web,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 12\n    }\n  })))));\n};\n\nexport default CodeProjects;\n/*    {   \n    projects\n    .filter(project => props.filter === null || project.type === props.filter)\n    .map(project=>{\n        return(\n        <CodeProject    id={project.id}\n                        project={project}\n        />\n        )\n      })\n  } */","map":{"version":3,"sources":["/home/vonmeme/Escritorio/proyectos code/Portfolio/portfolio/src/components/projects/code/CodeProjectsList.js"],"names":["React","Header","FilterButtons","CodeProject","CODEPROJECTS","useState","CodeProjects","props","projects","filterProjects","setFilterProjects","console","log","state","map","projectObject","id","image","title","details","description","links","code","web"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,YAAP,MAAyB,iCAAzB;AAEA,SAASC,QAAT,QAAyB,OAAzB;;AAGA,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAChC,QAAMC,QAAQ,GAAGJ,YAAjB;AAEA,QAAM,CAACK,cAAD,EAAiBC,iBAAjB,IAAsCL,QAAQ,CAAC,IAAD,CAApD;AAICM,EAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAZ;AAIG,sBAEI,uDACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,aAAD;AACI,IAAA,iBAAiB,EAAG,KAAKK,KAAL,CAAWH,iBADnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAIE;AAAI,IAAA,SAAS,EAAC,6BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEF,QAAQ,CAACM,GAAT,CAAcC,aAAD,iBACd;AAAI,IAAA,SAAS,EAAC,qBAAd;AACI,IAAA,GAAG,EAAEA,aAAa,CAACC,EADvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEA,oBAAC,WAAD;AACS,IAAA,KAAK,EAAED,aAAa,CAACE,KAD9B;AAES,IAAA,KAAK,EAAEF,aAAa,CAACG,KAF9B;AAGS,IAAA,WAAW,EAAEH,aAAa,CAACI,OAAd,CAAsBC,WAH5C;AAIS,IAAA,IAAI,EAAEL,aAAa,CAACI,OAAd,CAAsBE,KAAtB,CAA4BC,IAJ3C;AAKS,IAAA,GAAG,EAAEP,aAAa,CAACI,OAAd,CAAsBE,KAAtB,CAA4BE,GAL1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFA,CADC,CADF,CAJF,CAFJ;AAwBH,CAnCD;;AAoCG,eAAejB,YAAf;AAGH","sourcesContent":["import React from 'react';\nimport Header from '../../Header';\nimport FilterButtons from './FilterButtons';\nimport CodeProject from './CodeProject'\nimport CODEPROJECTS from '../../services/CodeProjectsJSON';\n\nimport { useState } from 'react';\n\n\nconst CodeProjects = (props) => {\nconst projects = CODEPROJECTS;\n\nconst [filterProjects, setFilterProjects] = useState(null); \n\n\n\n console.log(projects)\n\n\n\n    return (\n        \n        <>\n          <Header/>\n          <FilterButtons                             \n              setFilterProjects={ this.state.setFilterProjects }/>\n          <ul className=\"codeproject--list-container\">\n           {projects.map((projectObject) =>\n           <li className=\"codeproject--object\"\n               key={projectObject.id}>\n           <CodeProject\n                    image={projectObject.image}\n                    title={projectObject.title}\n                    description={projectObject.details.description}\n                    code={projectObject.details.links.code}\n                    web={projectObject.details.links.web}\n            />\n            </li>\n           )}\n        </ul>\n\n        </>\n    )\n    \n}\n   export default CodeProjects;\n\n\n/*    {   \n    projects\n    .filter(project => props.filter === null || project.type === props.filter)\n    .map(project=>{\n        return(\n        <CodeProject    id={project.id}\n                        project={project}\n        />\n        )\n      })\n  } */"]},"metadata":{},"sourceType":"module"}