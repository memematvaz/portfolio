{"ast":null,"code":"var _jsxFileName = \"/home/vonmeme/Escritorio/evaluciacion-final/modulo-3-evaluacion-final-memematvaz/src/components/CharacterList.js\";\nimport React from 'react';\nimport Character from './Character.js';\nimport { Link } from 'react-router-dom';\n\nconst CharacterList = props => {\n  console.log('busqueda' + props.data.length);\n\n  if (props.data.length === 0) {\n    return /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 16\n      }\n    }, `There is no character named ${props.inputValue}`);\n  } else {\n    return /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }\n    }, props.data.filter(characterObject => props.inputValue === '' || characterObject.name.toLowerCase().includes(props.inputValue.toLowerCase())).forEach(characterObject => /*#__PURE__*/React.createElement(\"li\", {\n      key: characterObject.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: `/character/${characterObject.id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Character, {\n      image: characterObject.image,\n      name: characterObject.name,\n      specie: characterObject.species,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 29\n      }\n    })))));\n  }\n};\n\nexport default CharacterList;\n/*if(props.data.length !== props.inputValue){\n        return (`There is no character named ${props.inputValue}`)\n    }else{\n     return(\n        <ul>\n        {props.data\n            .filter(characterObject => props.inputValue === '' || characterObject.name.toLowerCase().includes(props.inputValue.toLowerCase()))\n            .map(characterObject =>\n\n            <li key={characterObject.id}>\n                <Link to={`/character/${characterObject.id}`}>\n                    <Character image={characterObject.image}\n                               name={characterObject.name}\n                               specie={characterObject.species}\n                    />\n                </Link>\n            </li>\n            )}\n        </ul>\n    )\n}\n*/\n\n/*const CharacterList = (props) => {\n    console.log(props.inputValue)\n    if(characterObject => props.data.includes(characterObject.name)) {\n        \n        return ( \n                <ul>\n                {props.data\n                    .filter(characterObject => props.inputValue === '' || characterObject.name.toLowerCase().includes(props.inputValue.toLowerCase()))\n                    .map(characterObject =>\n        \n                    <li key={characterObject.id}>\n                        <Link to={`/character/${characterObject.id}`}>\n                            <Character image={characterObject.image}\n                                       name={characterObject.name}\n                                       specie={characterObject.species}\n                            />\n                        </Link>\n                    </li>\n                    )}\n                </ul>\n            )\n        }\n    else{\n     return( `There is no character named ${props.inputValue}`)\n       \n    \n}\n\n}*/","map":{"version":3,"sources":["/home/vonmeme/Escritorio/evaluciacion-final/modulo-3-evaluacion-final-memematvaz/src/components/CharacterList.js"],"names":["React","Character","Link","CharacterList","props","console","log","data","length","inputValue","filter","characterObject","name","toLowerCase","includes","forEach","id","image","species"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,gBAAtB;AACA,SAASC,IAAT,QAAqB,kBAArB;;AAEA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAE7BC,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAaF,KAAK,CAACG,IAAN,CAAWC,MAApC;;AACA,MAAGJ,KAAK,CAACG,IAAN,CAAWC,MAAX,KAAoB,CAAvB,EAA0B;AAEtB,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,+BAA8BJ,KAAK,CAACK,UAAW,EAApD,CAAP;AAAkE,GAFtE,MAII;AACA,wBACQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACCL,KAAK,CAACG,IAAN,CACIG,MADJ,CACWC,eAAe,IAAIP,KAAK,CAACK,UAAN,KAAqB,EAArB,IAA2BE,eAAe,CAACC,IAAhB,CAAqBC,WAArB,GAAmCC,QAAnC,CAA4CV,KAAK,CAACK,UAAN,CAAiBI,WAAjB,EAA5C,CADzD,EAEIE,OAFJ,CAEYJ,eAAe,iBAExB;AAAI,MAAA,GAAG,EAAEA,eAAe,CAACK,EAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAG,cAAaL,eAAe,CAACK,EAAG,EAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAEL,eAAe,CAACM,KAAlC;AACW,MAAA,IAAI,EAAEN,eAAe,CAACC,IADjC;AAEW,MAAA,MAAM,EAAED,eAAe,CAACO,OAFnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,CAJH,CADD,CADR;AAkBH;AAEJ,CA5BD;;AA6BA,eAAef,aAAf;AAEA;;;;;;;;;;;;;;;;;;;;;;;AAuBA","sourcesContent":["import React from 'react';\nimport Character from './Character.js';\nimport { Link } from 'react-router-dom';\n\nconst CharacterList = (props) => {\n    \n    console.log('busqueda' + props.data.length)\n    if(props.data.length===0) {\n        \n        return <p>{`There is no character named ${props.inputValue}`}</p>}\n\n    else{\n        return(\n                <ul>\n                {props.data\n                    .filter(characterObject => props.inputValue === '' || characterObject.name.toLowerCase().includes(props.inputValue.toLowerCase()))\n                    .forEach(characterObject =>\n        \n                    <li key={characterObject.id}>\n                        <Link to={`/character/${characterObject.id}`}>\n                            <Character image={characterObject.image}\n                                       name={characterObject.name}\n                                       specie={characterObject.species}\n                            />\n                        </Link>\n                    </li>\n                    )}\n                </ul>\n            \n        )\n    }\n    \n}\nexport default CharacterList;\n\n/*if(props.data.length !== props.inputValue){\n        return (`There is no character named ${props.inputValue}`)\n    }else{\n     return(\n        <ul>\n        {props.data\n            .filter(characterObject => props.inputValue === '' || characterObject.name.toLowerCase().includes(props.inputValue.toLowerCase()))\n            .map(characterObject =>\n\n            <li key={characterObject.id}>\n                <Link to={`/character/${characterObject.id}`}>\n                    <Character image={characterObject.image}\n                               name={characterObject.name}\n                               specie={characterObject.species}\n                    />\n                </Link>\n            </li>\n            )}\n        </ul>\n    )\n}\n*/\n\n/*const CharacterList = (props) => {\n    console.log(props.inputValue)\n    if(characterObject => props.data.includes(characterObject.name)) {\n        \n        return ( \n                <ul>\n                {props.data\n                    .filter(characterObject => props.inputValue === '' || characterObject.name.toLowerCase().includes(props.inputValue.toLowerCase()))\n                    .map(characterObject =>\n        \n                    <li key={characterObject.id}>\n                        <Link to={`/character/${characterObject.id}`}>\n                            <Character image={characterObject.image}\n                                       name={characterObject.name}\n                                       specie={characterObject.species}\n                            />\n                        </Link>\n                    </li>\n                    )}\n                </ul>\n            )\n        }\n    else{\n     return( `There is no character named ${props.inputValue}`)\n       \n    \n}\n\n}*/"]},"metadata":{},"sourceType":"module"}