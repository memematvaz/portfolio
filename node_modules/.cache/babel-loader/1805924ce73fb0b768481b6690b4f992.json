{"ast":null,"code":"var _jsxFileName = \"/home/vonmeme/Escritorio/proyectos code/Portfolio/portfolio/src/components/projects/code/CodeProjectsList.js\";\nimport React, { useState } from 'react';\nimport Header from '../../Header';\nimport FilterButtons from './FilterButtons';\nimport CodeProject from './CodeProject';\nimport CODEPROJECTS from '../../services/CodeProjectsJSON';\n\nconst CodeProjects = props => {\n  const [projects, setFilteredProjects] = useState(CODEPROJECTS);\n  console.log(projects);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(FilterButtons, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"codeproject--list-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 11\n    }\n  }, props.projects.map((projects, id) => /*#__PURE__*/React.createElement(\"li\", {\n    className: \"codeproject--object\",\n    id: projects.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(CodeProject, {\n    image: projects.url,\n    name: projects.name,\n    pokemonTypes: projects.types,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 12\n    }\n  })))), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"container-pokemons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, props.dataList.map(pokemonObject => /*#__PURE__*/React.createElement(\"li\", {\n    className: \"pokemon\",\n    key: pokemonObject.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 14\n    }\n  }, /*#__PURE__*/React.createElement(Pokemon, {\n    image: pokemonObject.url,\n    name: pokemonObject.name,\n    pokemonTypes: pokemonObject.types,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 15\n    }\n  })))));\n};\n\nexport default CodeProjects;\n/*    {   \n    projects\n    .filter(project => props.filter === null || project.type === props.filter)\n    .map(project=>{\n        return(\n        <CodeProject    id={project.id}\n                        project={project}\n        />\n        )\n      })\n  } */","map":{"version":3,"sources":["/home/vonmeme/Escritorio/proyectos code/Portfolio/portfolio/src/components/projects/code/CodeProjectsList.js"],"names":["React","useState","Header","FilterButtons","CodeProject","CODEPROJECTS","CodeProjects","props","projects","setFilteredProjects","console","log","map","id","url","name","types","dataList","pokemonObject"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,YAAP,MAAyB,iCAAzB;;AAGA,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAC/B,QAAM,CAACC,QAAD,EAAWC,mBAAX,IAAkCR,QAAQ,CAACI,YAAD,CAAhD;AAIAK,EAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AAGG,sBACI,uDACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE;AAAI,IAAA,SAAS,EAAC,6BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACED,KAAK,CAACC,QAAN,CAAeI,GAAf,CAAmB,CAACJ,QAAD,EAAWK,EAAX,kBACpB;AAAI,IAAA,SAAS,EAAC,qBAAd;AACI,IAAA,EAAE,EAAEL,QAAQ,CAACK,EADjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEA,oBAAC,WAAD;AACS,IAAA,KAAK,EAAEL,QAAQ,CAACM,GADzB;AAES,IAAA,IAAI,EAAEN,QAAQ,CAACO,IAFxB;AAGS,IAAA,YAAY,EAAEP,QAAQ,CAACQ,KAHhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFA,CADC,CADF,CAHF,eAgBA;AAAI,IAAA,SAAS,EAAC,oBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACQT,KAAK,CAACU,QAAN,CAAeL,GAAf,CAAoBM,aAAD,iBACtB;AAAI,IAAA,SAAS,EAAC,SAAd;AACI,IAAA,GAAG,EAAEA,aAAa,CAACL,EADvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEC,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAEK,aAAa,CAACJ,GAA9B;AACS,IAAA,IAAI,EAAEI,aAAa,CAACH,IAD7B;AAES,IAAA,YAAY,EAAEG,aAAa,CAACF,KAFrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFD,CADG,CADR,CAhBA,CADJ;AAmCH,CA3CD;;AA4CG,eAAeV,YAAf;AAGH","sourcesContent":["import React, { useState } from 'react';\nimport Header from '../../Header';\nimport FilterButtons from './FilterButtons';\nimport CodeProject from './CodeProject'\nimport CODEPROJECTS from '../../services/CodeProjectsJSON';\n\n\nconst CodeProjects = (props) => {\n const [projects, setFilteredProjects] = useState(CODEPROJECTS);\n\n \n\n console.log(projects)\n\n\n    return (\n        <>\n          <Header/>\n          <FilterButtons/>\n          <ul className=\"codeproject--list-container\">\n           {props.projects.map((projects, id) =>\n           <li className=\"codeproject--object\"\n               id={projects.id}>\n           <CodeProject\n                    image={projects.url}\n                    name={projects.name}\n                    pokemonTypes={projects.types}\n            />\n            </li>\n           )}\n        </ul>\n\n        <ul className=\"container-pokemons\">\n               {props.dataList.map((pokemonObject) =>\n             <li className=\"pokemon\"\n                 key={pokemonObject.id}>\n              <Pokemon image={pokemonObject.url}\n                       name={pokemonObject.name}\n                       pokemonTypes={pokemonObject.types}\n               />\n             </li>\n                 )}\n         </ul>\n\n\n\n\n        </>\n    )\n    \n}\n   export default CodeProjects;\n\n\n/*    {   \n    projects\n    .filter(project => props.filter === null || project.type === props.filter)\n    .map(project=>{\n        return(\n        <CodeProject    id={project.id}\n                        project={project}\n        />\n        )\n      })\n  } */"]},"metadata":{},"sourceType":"module"}