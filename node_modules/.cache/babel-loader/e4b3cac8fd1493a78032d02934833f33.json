{"ast":null,"code":"var _jsxFileName = \"/home/vonmeme/Escritorio/evaluciacion-final/modulo-3-evaluacion-final-memematvaz/src/components/App.js\";\nimport React from 'react';\nimport '../styles/App.scss';\nimport fetchCharacters from './services/FetchData.js';\nimport CharacterList from './CharacterList';\nimport CharacterDetails from './CharacterDetails';\nimport FilterInput from './FilterInput';\nimport { Route, Switch } from 'react-router-dom';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleInputValue = this.handleInputValue.bind(this);\n    this.renderCharacterDetails = this.renderCharacterDetails.bind(this);\n    this.state = {\n      data: [],\n      value: ''\n    };\n  }\n\n  componentDidMount() {\n    const localValue = JSON.parse(localStorage.getItem('localValue'));\n\n    if (localValue !== null) {\n      this.setState({\n        value: localValue\n      });\n    }\n\n    fetchCharacters().then(data => {\n      this.setState({\n        data: data.results\n      });\n    });\n  }\n\n  componentDidMount() {\n    const datavalue = JSON.parse(localStorage.getItem('datavalue'));\n\n    if (datavalue !== null) {\n      this.setState({\n        value: datavalue\n      });\n    }\n\n    fetchData().then(data => {\n      this.setState({\n        data: data.results\n      });\n    });\n  }\n\n  componentDidUpdate() {\n    localStorage.setItem('localValue', JSON.stringify(this.state.value));\n  }\n\n  handleInputValue(inputValue) {\n    this.setState({\n      value: inputValue\n    });\n  }\n\n  renderCharacterDetails(props) {\n    console.log(props);\n    const routeId = props.match.params.id;\n    const characters = this.state.data;\n\n    for (let character of characters) {\n      if (character.id === parseInt(routeId)) {\n        return /*#__PURE__*/React.createElement(CharacterDetails, {\n          characterObject: character,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 18\n          }\n        });\n      }\n    }\n  }\n\n  render() {\n    console.log(this.state.data);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(FilterInput, {\n      handleInputValue: this.handleInputValue,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 12\n      }\n    }), /*#__PURE__*/React.createElement(CharacterList, {\n      data: this.state.data,\n      inputValue: this.state.value,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 12\n      }\n    })), /*#__PURE__*/React.createElement(Route, {\n      path: \"/character/:id\",\n      render: this.renderCharacterDetails,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 10\n      }\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/vonmeme/Escritorio/evaluciacion-final/modulo-3-evaluacion-final-memematvaz/src/components/App.js"],"names":["React","fetchCharacters","CharacterList","CharacterDetails","FilterInput","Route","Switch","App","Component","constructor","props","handleInputValue","bind","renderCharacterDetails","state","data","value","componentDidMount","localValue","JSON","parse","localStorage","getItem","setState","then","results","datavalue","fetchData","componentDidUpdate","setItem","stringify","inputValue","console","log","routeId","match","params","id","characters","character","parseInt","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport '../styles/App.scss';\nimport fetchCharacters from './services/FetchData.js';\nimport CharacterList from './CharacterList';\nimport CharacterDetails from './CharacterDetails';\nimport FilterInput from './FilterInput';\nimport { Route, Switch } from 'react-router-dom';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleInputValue = this.handleInputValue.bind(this);\n    this.renderCharacterDetails = this.renderCharacterDetails.bind(this);\n    this.state = {\n      data: [],\n      value:''\n        }\n  }\n\n\n  componentDidMount(){\n    const localValue = JSON.parse(localStorage.getItem('localValue'));\n\n    if(localValue !== null){\n        this.setState({\n          value:localValue\n        })\n      }\n    fetchCharacters()\n      .then(data => {\n        this.setState ({\n          data:data.results\n        })\n      })\n    }\n\n    componentDidMount() {\n\n      const datavalue = JSON.parse(localStorage.getItem('datavalue'));\n      if (datavalue !== null) {\n        this.setState({\n          value: datavalue\n        })\n      }\n      fetchData()\n        .then(data => {\n          this.setState({\n            data: data.results\n          })\n        })\n    }\n\n\n\n  \n    componentDidUpdate(){\n      localStorage.setItem('localValue', JSON.stringify(this.state.value));\n  \n  }\n\n\n\n    handleInputValue(inputValue){\n      this.setState({\n        value: inputValue\n      })\n    }\n\n    renderCharacterDetails(props){\n      console.log(props)\n      const routeId = props.match.params.id;\n      const characters = this.state.data;\n      for(let character of characters) {\n        if(character.id === parseInt(routeId)) {\n          return <CharacterDetails characterObject={character}/>\n        }\n      }\n    }\n\n\n \n  render(){\n    console.log(this.state.data)\n    return (\n     <div>\n       <Switch>\n         <Route exact path=\"/\">\n           <FilterInput handleInputValue={this.handleInputValue}\n                       />\n           <CharacterList data={this.state.data} \n                          inputValue={this.state.value}\n                          />\n         </Route>\n         <Route path=\"/character/:id\" render={this.renderCharacterDetails}/>\n      </Switch>\n     </div>\n    );\n  }\n}\n\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}